pipeline {
    agent any
    environment {
        VERSION='0.11'
        OCI_HOST='harbor.saimo.com:20080'
        OCI_URI='harbor.saimo.com:20080/cloud-simpro'
    }
    stages {
        stage('Prepare env') {
            steps {
                script {
                    env.BRANCH_NAME = 'master'
                    if (env.gitlabSourceBranch != null) {
                        env.BRANCH_NAME = "${env.gitlabSourceBranch}" 
                    }
                    if (env.BRANCH_NAME == 'master') {
                        env.OCI_URI = 'registry-vecps-ns.gaccloud.com.cn/tenant-cgzo'
                    } else {
                        env.OCI_URI = 'registry-vecps-ns.gaccloud.com.cn/tenant-eaws'
                    }
                }
                sh 'echo ${BRANCH_NAME}'
                sh 'echo ${OCI_URI}'
            }
        }
        stage('Build') {
            steps {
                 withCredentials([usernamePassword(credentialsId: 'oci-credentials', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh '''docker login -u=${USERNAME} -p=${PASSWORD} http://${OCI_HOST}
docker pull ${OCI_URI}/nginx:1.21-alpine
docker pull ${OCI_URI}/node:18
docker tag ${OCI_URI}/node:18 node:18
docker tag ${OCI_URI}/nginx:1.21-alpine nginx:1.21-alpine
docker build -t ${OCI_URI}/cloud_simpro_front:${VERSION} .
'''
                }
            }
        }
        stage('Image Push') {
            steps {
                sh '''docker push ${OCI_URI}/cloud_simpro_front:${VERSION}
                '''
            }
        }
        stage('Clean Image') {
            steps {
                sh '''docker rmi ${OCI_URI}/cloud_simpro_front:${VERSION}'''
            }
        }
        stage('Deploy test') {
            when {
                branch 'develop'
            }
            steps {
                withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'kube-config', namespace:'',restrictKubeConfigAccess: false, serverUrl: ''){
                    sh '''envsubst < cicd/cloud-simpro-front.yml | kubectl apply -f -'''
                }
            }
        }
        stage('Deploy prod') {
            when {
                branch 'master'
                beforeInput true
            }
            options {
                timeout(time:1, unit:'MINUTES')
            }
            input {
                message "是否部署到集群?"
                ok  "是"
            }
            steps {
                withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'kube-config-prod', namespace:'',restrictKubeConfigAccess: false, serverUrl: ''){
                    sh '''kubectl get pod -owide
envsubst < cicd/cloud-simpro-front.yml | kubectl apply -f -
'''
                }
            }
        }
    }
    post {
        always {
            cleanWs(cleanWhenNotBuilt: false,
                    deleteDirs: true,
                    disableDeferredWipeout: true,
                    notFailBuild: true)
        }
        success {
            sh '''
curl -X POST -H "Content-Type: application/json" \
-d "{
\\"msg_type\\": \\"interactive\\",
\\"card\\": {
    \\"config\\": {
        \\"wide_screen_mode\\": true,
        \\"enable_forward\\": true
    },
    \\"elements\\": [{
        \\"tag\\": \\"div\\",
        \\"text\\": {
            \\"content\\": \\"commit_id: ${GIT_COMMIT}\\",
            \\"tag\\": \\"lark_md\\"
        }
    }, {
        \\"tag\\": \\"action\\",
        \\"actions\\": [{
            \\"tag\\": \\"button\\",
            \\"text\\": {
                    \\"content\\": \\"详情\\",
                    \\"tag\\": \\"plain_text\\"
            },
            \\"url\\": \\"${BUILD_URL}\\",
            \\"type\\": \\"default\\",
            \\"value\\": {}
        }]
    }],
    \\"header\\": {
        \\"title\\": {
            \\"content\\": \\"${JOB_NAME} <${GIT_BRANCH}> 打包 成功\\",
            \\"tag\\": \\"plain_text\\"
        }
    }
}
}" \
https://open.feishu.cn/open-apis/bot/v2/hook/f8078a48-edbb-4aa7-b2fc-3daf3bd8b6fa'''
        }
        failure {
            sh '''
curl -X POST -H "Content-Type: application/json" \
-d "{
\\"msg_type\\": \\"interactive\\",
\\"card\\": {
    \\"config\\": {
        \\"wide_screen_mode\\": true,
        \\"enable_forward\\": true
    },
    \\"elements\\": [{
        \\"tag\\": \\"div\\",
        \\"text\\": {
            \\"content\\": \\"commit_id: ${GIT_COMMIT}\\",
            \\"tag\\": \\"lark_md\\"
        }
    }, {
        \\"tag\\": \\"action\\",
        \\"actions\\": [{
            \\"tag\\": \\"button\\",
            \\"text\\": {
                    \\"content\\": \\"详情\\",
                    \\"tag\\": \\"plain_text\\"
            },
            \\"url\\": \\"${BUILD_URL}\\",
            \\"type\\": \\"default\\",
            \\"value\\": {}
        }]
    }],
    \\"header\\": {
        \\"title\\": {
            \\"content\\": \\"${JOB_NAME} <${GIT_BRANCH}> 打包 失败\\",
            \\"tag\\": \\"plain_text\\"
        }
    }
}
}" \
https://open.feishu.cn/open-apis/bot/v2/hook/f8078a48-edbb-4aa7-b2fc-3daf3bd8b6fa'''
        }
    }
}
